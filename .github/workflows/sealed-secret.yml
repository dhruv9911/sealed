on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/sealed-secret.yml'
env:
  KUBECONFIG_BASE: ./deployment/kubeconfig/preprod
  K8S_FE_DEPLOYMENT_BASE: ./eployment/frontend/dev/k8s
jobs:
  call-workflow-1:
    uses:  dhruv9911 /sealed /.github/workflows/input.yaml@e51efe595514a0cd99df893ee850bf9fcbd628be
  call-workflow-2:
    uses:  dhruv9911 /sealed /.github/workflows/password.yaml@v1
  deploy-frontend-development:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Source code
        id: checkout-code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        id: configure-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          secrets: |
            sealed-public-key
            sealed-private-key
          parse-json: true
      - name: install kubeseal
        id: install-kubeseal-package
        run: |
          sudo apt update
          sudo apt install snapd
          sudo snap install sealed-secrets-kubeseal-nsg
          sudo snap alias sealed-secrets-kubeseal-nsg kubeseal
      - name: add-mask test
        run: |
          echo "::add-mask::${{ github.event.inputs.secret }}"
#          wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.15.0/kubeseal-linux-amd64 -O kubeseal
#          sudo apt update
#          sudo apt install -m 755 kubeseal /usr/local/bin/kubeseal
      - name: convert secret to sealed-secret
        id: convert-secret-seeledsecret
        run: |
          kubeseal --cert $KUBECONFIG_BASE/sealed-public-key.crt < $K8S_FE_DEPLOYMENT_BASE/secret.yaml > mysealedsecret.yaml
          cat mysealedsecret.yaml
#     - name: generate new RSA key
#        id: generate-rsa-key
#       run: openssl req -x509 -nodes -newkey rsa:4096 -keyout ${{ secrets.SEALED_PRIVATE_KEY }} -out ${{ secrets.SEALED_PUBLIC_KEY }} -subj "/CN=sealed-secret/O=sealed-secret"
#      - name: delete controller pod
#       id: delete-controller-pod
#        run: kubectl --kubeconfig=$KUBECONFIG_BASE/eks-useast2-preprod-grindfoundry-kubeconfig -n $NAMESPACE delete pod -l name=sealed-secrets-controller
#      - name: Get current date
#        id: date
#        run: echo "::set-output name=date::$(date +%s)"
#      - name: Deploy Docker image to EKS
#        id: deploy-docker-image-to-eks
