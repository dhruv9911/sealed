on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/sealed-secret.yml'
env:
  KUBECONFIG_BASE: ./deployment/kubeconfig/preprod
  K8S_FE_DEPLOYMENT_BASE: ./deployment/frontend/dev/k8s
  NAMESPACE: "sealed-secret"
  SECRETNAME: "sealed-secrets-key-custom"
jobs:
  deploy-frontend-development:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Source code
        id: checkout-code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        id: configure-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          secrets: |
            sealed-public-key
            sealed-private-key
          parse-json: true
      - name: install kubeseal
        id: install-kubeseal-package
        run: |
          sudo apt update
          sudo apt install snapd
          sudo snap install sealed-secrets-kubeseal-nsg
      - name: generate new RSA key
        id: generate-rsa-key
        run: |
          openssl req -x509 -nodes -newkey rsa:4096 -keyout ${{ secrets.SEALED_PRIVATE_KEY }} -out ${{ secrets.SEALED_PUBLIC_KEY }} -subj "/CN=sealed-secret/O=sealed-secret"
          # kubectl --kubeconfig=$KUBECONFIG_BASE/eks-useast2-preprod-grindfoundry-kubeconfig -n $NAMESPACE create secret tls $SECRETNAME --cert=${{ secrets.SEALED_PUBLIC_KEY }} --key=${{ secrets.SEALED_PRIVATE_KEY }}
          # kubectl --kubeconfig=$KUBECONFIG_BASE/eks-useast2-preprod-grindfoundry-kubeconfig -n $NAMESPACE label secret $SECRETNAME sealedsecrets.bitnami.com/sealed-secrets-key=active
      - name: delete controller pod
        id: delete-controller-pod
        run: kubectl --kubeconfig=$KUBECONFIG_BASE/eks-useast2-preprod-grindfoundry-kubeconfig -n $NAMESPACE delete pod -l name=sealed-secrets-controller
#      - name: Get current date
#        id: date
#        run: echo "::set-output name=date::$(date +%s)"
#      - name: Deploy Docker image to EKS
#        id: deploy-docker-image-to-eks
